buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.maiflai:gradle-scalatest:0.10"
    }
}

apply plugin: "scala"
apply plugin: "com.github.maiflai.scalatest"
apply plugin: "java"
apply plugin: "maven-publish"

group = group
version = "${influxVersion}.${version}"

targetCompatibility = "1.7"

repositories {
    mavenCentral()
}

configurations {
    itestCompile.extendsFrom testCompile
    itestRuntime.extendsFrom testRuntime
}

sourceSets {
    itest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output

        scala.srcDir file('src/itest/scala')
    }

    test {
        resources.srcDir file('src/itest/resources')
    }
}

task itest(type: Test) {
    testClassesDir = sourceSets.itest.output.classesDir
    classpath = sourceSets.itest.runtimeClasspath

    testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencies {
    def akkaVersion = "2.3.4"
    def akkaHttpVersion = "2.0.1"

    compile "org.scala-lang:scala-library:$scalaVersion.6"
    compile "com.typesafe.akka:akka-actor_$scalaVersion:$akkaVersion"
    compile "com.typesafe.akka:akka-slf4j_$scalaVersion:$akkaVersion"
    compile "com.typesafe.akka:akka-http-experimental_$scalaVersion:$akkaHttpVersion"
    compile "com.typesafe.akka:akka-http-spray-json-experimental_$scalaVersion:$akkaHttpVersion"
    compile "ch.qos.logback:logback-classic:1.1.3"
    compile "joda-time:joda-time:2.9.2"
    compile "org.joda:joda-convert:1.8.1"

    testCompile "org.scalatest:scalatest_$scalaVersion:2.2.5"
    testCompile "org.mockito:mockito-all:1.10.19"
    testCompile "com.typesafe.akka:akka-testkit_$scalaVersion:$akkaVersion"
    testCompile "com.typesafe.akka:akka-http-testkit-experimental_$scalaVersion:$akkaHttpVersion"
    testCompile "junit:junit:4.12"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allScala
}

publishing {
    publications {
        mavenScala(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}